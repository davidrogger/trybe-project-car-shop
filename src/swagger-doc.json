{
  "openapi": "3.0.0",
  "info": {
    "title": "Project Car Shop",
    "description": "API usando banco de dados NoSQL MongoDB, construindo para prática de orientação a objetos com typescript.",
    "version": "1.0.0"
  },
  "paths": {
    "/cars": {
      "post": {
        "tags": ["Cars"],
        "summary": "Endpoint para cadastro de carros.",
        "description": "Rota responsável por cadastrar novos carros ao banco.",
        "requestBody": {
          "required": true,
          "description": "Para caradastrar um novo carro é necessário enviar um corpo json válido com `model`, `year`, `color`, `buyValue`, `doorsQty` e `seatsQty`",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCarBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Cadastro realizado com sucesso."
          },
          "400": {
            "description": "Ausência do campo obrigatório ou fora padrão especificado."
          },
          "500": {
            "description": "Falha interna com o servidor."
          }
        }
      },
      "get": {
        "tags": ["Cars"],
        "summary": "Endpoint para mostrar carros cadastrados.",
        "description": "Rota responsável por mostrar todos carros cadastrados.",
        "responses": {
          "200": {
            "description": "Busca realizada com sucesso."
          },
          "500": {
            "description": "Falha interna com o servidor."
          }
        }
      }
    },
    "/cars/{id}": {
      "get": {
        "tags": ["Cars"],
        "summary": "Endpoint mostra detalhes de um carro por seu id.",
        "description": "Rota responsável por buscar um carro por seu id, e mostrar seus detalhes de cadastro.",
        "parameters": [
          {
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Busca realizada com sucesso."
          },
          "400": {
            "description": "Parametro ID fora do padrão esperado."
          },
          "404": {
            "description": "ID não encontrado."
          },
          "500": {
            "description": "Falha interna com o servidor."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "VehicleBody": {
        "type": "object",
        "required": ["model", "year", "color", "buyValue"],
        "properties": {
          "model": {
            "type": "string",
            "description": "Deve ter no mínimo 3 caracteres.",
            "example": "Toyota Corolla DX"
          },
          "year": {
            "type": "number",
            "description": "Deve estar entre 1900 e 2022.",
            "example": 1994
          },
          "color": {
            "type": "string",
            "description": "Deve ter no mínimo 3 caracteres.",
            "example": "Prata"
          },
          "status": {
            "type": "string",
            "description": "Campo opcional, contendo um booleano, define se o veículo pode ser comprado ou não.",
            "example": true
          },
          "buyValue": {
            "type": "number",
            "description": "Deve ser um valor positivo.",
            "example": 104500
          }
        }
      },
      "NewCarBody": {
        "allOf": [
          {
            "$ref": "#/components/schemas/VehicleBody"
          },
          {
            "type": "object",
            "required": ["doorsQty", "seatsQty"],
            "properties": {
              "doorsQty": {
                "type": "number",
                "description": "Deve ser um número entre 2 e 4.",
                "example": 4
              },
              "seatsQty": {
                "type": "number",
                "description": "Deve ser um número entre 2 e 7.",
                "example": 5
              }
            }
          }
        ]
      }
    }
  }
}